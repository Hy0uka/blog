<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>APT on 清夜无尘の一方天地</title>
    <link>https://wander1ng.com/tags/apt/</link>
    <description>Recent content in APT on 清夜无尘の一方天地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <copyright>Copyright © 2019–2024</copyright>
    <lastBuildDate>Wed, 20 Nov 2024 18:42:55 +0800</lastBuildDate>
    
	<atom:link href="https://wander1ng.com/tags/apt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>钓鱼邮件浅析(参考语雀P1ut0)</title>
      <link>https://wander1ng.com/post/%E9%92%93%E9%B1%BC%E9%82%AE%E4%BB%B6%E6%B5%85%E6%9E%90%E5%8F%82%E8%80%83%E8%AF%AD%E9%9B%80p1ut0/</link>
      <pubDate>Wed, 20 Nov 2024 18:42:55 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/%E9%92%93%E9%B1%BC%E9%82%AE%E4%BB%B6%E6%B5%85%E6%9E%90%E5%8F%82%E8%80%83%E8%AF%AD%E9%9B%80p1ut0/</guid>
      <description>&lt;h4 id=&#34;一种未曾见过的钓鱼手法使用iframe元素填充页面&#34;&gt;一种未曾见过的钓鱼手法：使用iframe元素填充页面&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/140b75470ebc2561d9f4d3e671fa1ede.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然但是，直接看url也能看出不是官方页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/647efb2bdfeb4192b10c8f7bde679b1c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;该页面实际上被一个满屏的iframe给填充了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/57d31d25d2f9dc189296bf2a0d047260.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;只是在直接的钓鱼页面过程中加上了一层跳转，实际上该是黑的域名还是黑的。&lt;/p&gt;
&lt;h4 id=&#34;直接投递exe类钓鱼邮件&#34;&gt;直接投递exe类钓鱼邮件&lt;/h4&gt;
&lt;p&gt;一般都会对样本进行加密压缩规避杀软，同时将解压密码写在正文中。APT-Q-15这样做过，虽然投递的是msi。&lt;/p&gt;
&lt;h4 id=&#34;钓鱼邮件下发漏洞文档&#34;&gt;钓鱼邮件下发漏洞文档&lt;/h4&gt;
&lt;p&gt;最常见的CVE2017-11822，从C2远程加载exe&lt;/p&gt;
&lt;h4 id=&#34;macro40宏文档投递&#34;&gt;Macro4.0宏文档投递&lt;/h4&gt;
&lt;p&gt;VBA（Visual Basic for Applications）是为Microsoft Office软件开发的一种宏语言。它可以用于各种Office应用程序，如Excel、Word、PowerPoint等。VBA有强大的内置函数和对象模型，可以轻松地扩展Office应用程序的功能，从而提高工作效率。VBA也可以用于创建自己的用户界面和编写各种业务应用程序。&lt;/p&gt;
&lt;p&gt;VBS（Visual Basic Script）是一种通用的脚本语言，它通常用于Windows操作系统中的各种任务和自动化操作。VBS通常用于运行脚本文件、自动化常规任务、设置环境变量、执行Windows命令等等。VBS相比于VBA，不依赖于Office应用程序，并且可以执行操作系统级别的任务。&lt;/p&gt;
&lt;p&gt;但VBS不等于XLM宏。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;VBA&lt;/th&gt;
&lt;th&gt;XLM宏&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Excel5.0技术&lt;/td&gt;
&lt;td&gt;Excel4.0技术&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;依赖于office组件执行&lt;/td&gt;
&lt;td&gt;依赖于wscript.exe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;语法相同&lt;/td&gt;
&lt;td&gt;语法相同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;XLM宏的创建比较简单，直接在某个工作表右键选择插入MS Excel4.0宏表。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/f68d3f153c5dd09e71ecc92bea7f75b5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Excel则会自动创建一个名为Macro1的新工作表，中文系统下为&amp;lt;宏1&amp;gt;，在创建的新工作表中，可以执行宏指令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/43351dcae816838c5f1cc6b52bdcfaa9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用XLM宏比常见的VBA宏具有更好的免杀性。原因主要是：&lt;/p&gt;
&lt;p&gt;XLM宏和VBA宏的设计理念不同，导致了宏代码在文件结构中的呈现不同。和VBA宏一样的是，在文件打开时，Excel依旧会提醒用户&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because of your security settings, macros have been disabled. To run macros, you need to reopen this workbook, and then choose to enable macros. For more information about enabling macros, click Help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让用户决定是否要启用宏。&lt;strong&gt;不同的是，当用户单击启用之后，ALT + F11打开宏代码窗口，却并不能看到宏代码。也不能通过一些常见的宏代码提取工具检测分析宏。这是因为默认情况下，XLM宏代码存储在xl\Macrosheets\文件夹下的Sheet1.xml中。打开该xml文件，可以清晰的看到刚才在Excel工作表中插入的宏代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/11/7d105156c0d16f5314ee44aee1a1c8e3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;钓鱼邮件伪造防范&#34;&gt;钓鱼邮件伪造防范&lt;/h3&gt;
&lt;h4 id=&#34;查看邮件头信息email-header&#34;&gt;查看邮件头信息（Email Header）&lt;/h4&gt;
&lt;p&gt;邮件头包含了邮件的详细元数据，是真实发件人身份验证的关键。你可以查看以下几个字段：&lt;/p&gt;
&lt;h4 id=&#34;1-return-path&#34;&gt;1. &lt;strong&gt;Return-Path&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;表示邮件退回的地址，攻击者通常会伪造这个地址。&lt;/li&gt;
&lt;li&gt;与“From”字段不同则可疑。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-received多级&#34;&gt;2. &lt;strong&gt;Received&lt;/strong&gt;（多级）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;显示邮件在传输过程中的每一跳（由哪个邮件服务器接收，再转发）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从底部往上看&lt;/strong&gt;，看是否有可疑或不一致的来源 IP。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-message-id&#34;&gt;3. &lt;strong&gt;Message-ID&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;合法邮件服务（如 Gmail）会生成以其域名结尾的 Message-ID，如 &lt;code&gt;&amp;lt;randomid@mail.gmail.com&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;可疑的伪造邮件可能使用非标准或不一致的 Message-ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;检查域名验证机制反伪造技术&#34;&gt;检查域名验证机制（反伪造技术）&lt;/h4&gt;
&lt;p&gt;现代邮件系统用以下机制防止伪造：&lt;/p&gt;
&lt;h4 id=&#34;1-spfsender-policy-framework&#34;&gt;1. &lt;strong&gt;SPF（Sender Policy Framework）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;用来验证某个 IP 是否有权限代表该域名发送邮件。&lt;/li&gt;
&lt;li&gt;查看邮件头中的 &lt;code&gt;Received-SPF&lt;/code&gt; 字段，值应为 &lt;code&gt;pass&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;示例：&lt;code&gt;Received-SPF: pass (domain of example.com designates 192.0.2.1 as permitted sender)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-dkimdomainkeys-identified-mail&#34;&gt;2. &lt;strong&gt;DKIM（DomainKeys Identified Mail）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用加密签名验证发件人域名。&lt;/li&gt;
&lt;li&gt;邮件头中应有：&lt;code&gt;DKIM-Signature&lt;/code&gt; 和验证结果如：&lt;code&gt;Authentication-Results: dkim=pass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-dmarcdomain-based-message-authentication-reporting--conformance&#34;&gt;3. &lt;strong&gt;DMARC（Domain-based Message Authentication, Reporting &amp;amp; Conformance）&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;基于 SPF 和 DKIM，给出统一策略判断邮件是否合法。&lt;/li&gt;
&lt;li&gt;邮件头中应有类似：&lt;code&gt;Authentication-Results: dmarc=pass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Msi恶意文件及相关APT组织手法</title>
      <link>https://wander1ng.com/post/msi%E6%81%B6%E6%84%8F%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%B8%E5%85%B3apt%E7%BB%84%E7%BB%87%E6%89%8B%E6%B3%95/</link>
      <pubDate>Tue, 12 Nov 2024 11:15:13 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/msi%E6%81%B6%E6%84%8F%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%B8%E5%85%B3apt%E7%BB%84%E7%BB%87%E6%89%8B%E6%B3%95/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Msi文件&lt;/strong&gt;：即microsoft installer的简写，msi文件就是window installer的&lt;strong&gt;数据包&lt;/strong&gt;，把所有和安装文件相关（即下文说的windows installer的功能）的内容封装在一个包里。是包含有关软件安装的详细信息的数据库文件，存储安装过程中的数据，包括配置设置、要安装的文件和安装说明，确保结构化和高效的软件部署。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows Installer的用途包括&lt;/strong&gt;:管理软件的安装、管理软件组件的添加和删除、监视文件的复原以及使用回滚技术维护基本的灾难恢复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Msi技术的原理&lt;/strong&gt;：Windows Installer技术就是合并在一起发挥作用的两个部分:客户端安装程序服务（Msiexec.exe） 和Microsoft软件安装（MSI）软件包文件。&lt;/p&gt;
&lt;p&gt;Msiexec.exe 程序是 Windows Installer 的一个组件。 当 Msiexec.exe 被安装程序调用时，它将用 Msi.dll 读取&lt;strong&gt;软件包文件(.msi)、应用转换文件(.mst)&lt;/strong&gt; 并合并由安装程序提供的命令行选项。 Windows Installer 执行所有与安装有关的任务：包括将文件复制到硬盘、修改注册表、创建桌面快捷方式、必要时显示提示对话框以便用户输入安装首选项。&lt;/p&gt;
&lt;p&gt;当双击MSI文件的时候，与之关联的Windows Installer 的一个文件Msiexec.exe 被调用，它将用Msi.dll读取软件包文件（.msi）、应用转换文件（.mst）进行进一步处理。&lt;/p&gt;
&lt;p&gt;MSI文件的结构是Windows Installer用于软件安装、维护和删除的&lt;strong&gt;关系数据库&lt;/strong&gt;，数据库由几个表组成，每个表在安装过程中有特定的用途，这些表通过主键值和外键值链接。安装数据库包含安装应用程序所需的所有信息，因此需要用所需的信息填充表。一个MSI文件可以有多个表，我们重点关注在我们的分析中最有用的表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二进制表&lt;/strong&gt;直接在MSI数据库中存储二进制数据，如图标、位图、动画或自定义操作脚本，这些数据直接嵌入MSI文件中，并在安装期间使用Windows Installer API进行访问，它通常用于安装过程本身所需的较小资源。&lt;/p&gt;
&lt;p&gt;文件表包含有关将安装在目标系统上的文件的信息，描述要复制到用户计算机的实际应用程序文件。这些文件通常单独存储（例如，在CAB文件中）或作为MSI中的压缩流，并表示构成正在安装的应用程序的文件，文件表用于确定要安装的文件、安装位置及其属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Custom Action表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MSI文件中的自定义操作是指在安装过程中运行的命令或脚本，用于执行标准MSI操作无法处理的自定义任务。这些操作可以执行可执行文件、DLL、VBScript、JavaScript或预定义命令，从而使攻击者能够在看似合法安装的后台执行恶意代码&lt;/p&gt;
&lt;p&gt;MSI文件中的自定义操作在CustomAction表中定义，此表中的每个条目指定一个自定义操作、其类型、源和目标。以下是用于定义自定义操作的列的细分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action：这是自定义操作的名称。它充当主键并在序列表中引用此操作。如果名称与任何内置操作匹配，则不会执行自定义操作。&lt;/li&gt;
&lt;li&gt;Type：此字段包含指定自定义操作类型及其执行选项的标志的按位组合。类型确定操作是调用DLL、可执行文件、脚本还是设置属性。&lt;/li&gt;
&lt;li&gt;Source：此字段可以包含属性名称或指向另一个表的键，例如Binary表（用于嵌入的二进制文件）、File表（用于已安装的文件）或Directory表（用于路径）。引用的特定表取决于自定义操作的类型。&lt;/li&gt;
&lt;li&gt;Target：此字段提供自定义操作所需的其他信息，如DLL的入口点、可执行文件的命令行参数或脚本代码。&lt;/li&gt;
&lt;li&gt;ExtendedType：此字段指定自定义操作的其他选项，例如处理补丁卸载。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里就可以完成很多预期之外的操作，例如运行可执行文件的自定义操作可能使其Source字段引用File表中的键，而其Target字段包含命令行参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常见文件扩展名及其作用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.msi：Microsoft Windows软件包文件的主要扩展名，包含安装数据库和安装软件的必要说明。&lt;/li&gt;
&lt;li&gt;.mst：Windows NT转换文件，用于修改或自定义MSI文件，而不改变原始软件包。&lt;/li&gt;
&lt;li&gt;.msm：合并模块文件，用于交付共享组件并确保跨多个应用程序安装相同版本的共享文件。&lt;/li&gt;
&lt;li&gt;.msp：Windows Installer修补程序文件，用于对已安装的应用程序应用更新或修复。&lt;/li&gt;
&lt;li&gt;.cab：Cabinet文件，用于将多个文件压缩和打包到一个文件中，以便于分发。CAB 文件可以显著减小安装包的大小，并将多个文件打包在一起，以简化分发和部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;手动分析MSI文件的工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;msitools：包括msiinfo和msidump等实用程序，可用于检查MSI文件，枚举表和流，转储表内容，并从MSI文件中提取数据。&lt;/li&gt;
&lt;li&gt;msidump：由Mgeeky开发的工具，用于分析恶意MSI软件包，可以提取文件、流和二进制数据，并集成了YARA扫描，对于快速分类和详细检查潜在的恶意MSI特别有用。&lt;/li&gt;
&lt;li&gt;lessmsi：一个具有图形用户界面和命令行界面的实用程序，可以用来查看和提取MSI文件的内容，还具有Windows资源管理器集成，便于提取和MSI表查看器。&lt;/li&gt;
&lt;li&gt;MSI Viewer：可从Microsoft Store获得，用以查看MSI安装程序文件和合并模块的内容，还可以提取文件，而无需运行安装程序。&lt;/li&gt;
&lt;li&gt;Orca：由Microsoft开发的图形用户界面（GUI）工具，用于分析和编辑MSI文件，Orca允许用户打开MSI文件并查看其内部结构，包括表，属性和安装包的其他组件。&lt;/li&gt;
&lt;li&gt;msidiff：可以用于比较两个msi文件的差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;活跃APT组织使用MSI作为相关攻击载体情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bitter、APT-Q-27、APT-Q-15(Darkhotel)、CNC等APT组织将恶意组件压缩在cab中，在msi安装过程中释放并执行，这也是目前最为常见的利用手法，缺点是恶意组件随着MSI的安装会落地在磁盘上，比较考验攻击者持续的免杀技术。&lt;/p&gt;
&lt;p&gt;在CustomAction中支持各种类型的自定义操作，攻击者有较为丰富的操作空间，例如Bitter组织在CustomAction表中调用带有签名的第三方powershell解释器执行powershell脚本。&lt;/p&gt;
&lt;p&gt;而APT-Q-15（Darkhotel）在针对朝鲜人的间谍活动中，投递恶意的朝鲜字体MSI安装包，将木马模块core.dll添加到customAction表内，与Media表中插入的恶意模块相比，core.dll在msi安装过程中并不会落地，系统进程msiexec会启动一个独立的子进程内存加载该DLL，从而达到LOLBINS的效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MST文件和MSI文件的关系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MST (Microsoft Transform) 文件&lt;/strong&gt;是一种变换文件，它用于自定义和修改 MSI 文件的安装过程。通过使用 MST 文件，管理员可以对 MSI 安装包进行定制化调整，而不需要直接修改原始的 MSI 文件。这种方式非常适用于批量部署，因为可以根据不同需求灵活调整安装设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成 MST 文件&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;可以使用工具如 InstallShield、Orca 等来创建和编辑 MST 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用 MST 文件&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;在安装 MSI 文件时，可以使用命令行参数将 MST 文件应用于 MSI 包。例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;     msiexec /i example.msi TRANSFORMS=example.mst
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;这条命令会安装 example.msi 文件，同时应用 example.mst 文件中的配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以其实只是LOLbins的一种实现方式，不过“黑”从dll变成了mst。mst可以使用ocra生成，&lt;/p&gt;
&lt;p&gt;MST文件实际上也是压缩包，解压开来分析其中的dll就行。&lt;/p&gt;
&lt;p&gt;MST 内部的可执行模块一般会有两个导出函数分别为 LogSetupAfterInstall 和 LogSetupBeforeInstall，用来控制 MSI 安装过程中的流程。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;参考：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ti.qianxin.com/blog/articles/new%20-trend-in-msi-file-abuse-new-oceanlotus-group-first-to-use-mst-files-to-deliver-special-trojan-cn/&#34;&gt;MSI文件滥用新趋势：新海莲花组织首度利用MST文件投递特马&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-258044.htm&#34;&gt;msi恶意软件分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/16134?time__1311=GuD%3D7IqGhx%2FnKYK0%3DvBxmTr%3DwDOimeD&#34;&gt;MSI文件结构详解及MSI恶意样本分析方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mgeeky.tech/msi-shenanigans-part-1/&#34;&gt;MSI Shenanigans. Part 1 – Offensive Capabilities Overview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://intezer.com/blog/incident-response/how-to-analyze-malicious-msi-installer-files/&#34;&gt;How to Analyze Malicious MSI Installer Files&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MSI TRANSFORMS技术分析</title>
      <link>https://wander1ng.com/post/msi-transforms%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 30 Oct 2024 18:31:14 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/msi-transforms%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;来源于真实环境中遇到的某组织&lt;/p&gt;
&lt;p&gt;该技术比较冷门，Google只有Microsoft官方对其的两个介绍页面。它可以修改正常安装包的组件，实现木马的落地。&lt;/p&gt;
&lt;p&gt;官方定义：&lt;/p&gt;
&lt;p&gt;TRANSFORMS 属性是安装程序在安装包时应用的转换的列表。 安装程序按转换在属性中列出的顺序应用转换。 转换可以按文件名或按完整路径指定。 若要指定多个转换，请使用分号 (;) 分隔每个文件名或完整路径。 例如，若要对包应用三个转换，请将 TRANSFORMS 设置为文件名列表或完整路径列表。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TRANSFORMS=transform1.mst;transform2.mst;transform3.mst
TRANSFORMS=\\server\share\path\transform1.mst;\\server2\share2\path2\transform2.mst;\\server3\share3\path3\transform3.mst
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以通过在文件名前面加上冒号 (:) 来指示转换文件嵌入 .msi 文件的存储中，而不是一个独立文件。 例如，以下示例指示 transform1.mst 和 transform2.mst 嵌入在 .msi 文件中，而 transform3.mst 是独立文件。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TRANSFORMS=:transform1.mst;:transform2.mst;transform3.mst
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装程序在包的每次安装、播发、按需安装或维护安装时都需要 TRANSFORMS 中列出的转换。 TransformsSecure策略、TRANSFORMS 属性和 TRANSFORMS 字符串的第一个字符告知安装程序如何处理独立转换文件的源复原能力。 Windows Installer 将 TransformsAtSource 策略 或 TRANSFORMSATSOURCE设置得与 TransformsSecure 策略和 TRANSFORMSSECURE 相同。 请注意，嵌入 .msi 文件的转换不会缓存，并且始终从包中获取。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;看不懂，问了问GPT-4o&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TRANSFORMS&lt;/code&gt; 是 Microsoft Installer (MSI) 安装包中的一个参数，用于指定一个或多个变换文件（Transform files），这些变换文件可以在安装过程中修改 MSI 安装包的默认设置和行为。&lt;/p&gt;
&lt;h4 id=&#34;msi-transforms-参数&#34;&gt;MSI &lt;code&gt;TRANSFORMS&lt;/code&gt; 参数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TRANSFORMS&lt;/code&gt; 是一个参数，指定一个或多个变换文件（通常是 &lt;code&gt;.mst&lt;/code&gt; 文件）。&lt;/li&gt;
&lt;li&gt;这些变换文件定义了对原始 MSI 安装包进行的修改或定制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;可以用来配置软件的默认设置，添加或移除功能模块，修改安装路径等。&lt;/li&gt;
&lt;li&gt;适用于企业部署场景，帮助管理员根据公司需要定制软件安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例&#34;&gt;示例&lt;/h4&gt;
&lt;p&gt;假设你有一个名为 &lt;code&gt;example.msi&lt;/code&gt; 的安装包，以及一个变换文件 &lt;code&gt;custom.mst&lt;/code&gt;，你可以在命令行中使用 &lt;code&gt;TRANSFORMS&lt;/code&gt; 参数来应用变换文件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msiexec /i example.msi TRANSFORMS=custom.mst
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;多个变换文件&#34;&gt;多个变换文件&lt;/h4&gt;
&lt;p&gt;你也可以同时应用多个变换文件，用分号 &lt;code&gt;;&lt;/code&gt; 分隔：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msiexec /i example.msi TRANSFORMS=custom1.mst;custom2.mst
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;实际案例&#34;&gt;实际案例&lt;/h4&gt;
&lt;p&gt;例如，一个软件包在不同的部门需要不同的配置设置，使用变换文件可以创建多个配置方案而无需修改原始的 MSI 文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原始安装包&lt;/strong&gt;： &lt;code&gt;software.msi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;财务部门定制&lt;/strong&gt;： &lt;code&gt;finance.mst&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IT 部门定制&lt;/strong&gt;： &lt;code&gt;it.mst&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安装财务部门定制版本&#34;&gt;安装财务部门定制版本：&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msiexec /i software.msi TRANSFORMS=finance.mst
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;安装-it-部门定制版本&#34;&gt;安装 IT 部门定制版本：&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msiexec /i software.msi TRANSFORMS=it.mst
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;如何创建变换文件&#34;&gt;如何创建变换文件&lt;/h4&gt;
&lt;p&gt;变换文件通常是通过专门的 MSI 编辑工具创建的，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Orca&lt;/strong&gt;：Microsoft 提供的一个免费的 MSI 数据库编辑器，可以用来创建和编辑变换文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;InstEd&lt;/strong&gt;：第三方工具，功能强大且易于使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;总结&#34;&gt;总结&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;TRANSFORMS&lt;/code&gt; 参数在 MSI 安装过程中起到了关键作用，通过指定一个或多个变换文件，管理员可以灵活地定制软件的安装设置和行为。这对于大规模部署和不同部门的个性化需求特别有用，既能减少工作量，又能确保安装的一致性和准确性。&lt;/p&gt;
&lt;p&gt;我的理解是攻击者在msi安装文件中嵌入了自己的恶意代码&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Confucius组织利用ADS隐藏技术的攻击活动</title>
      <link>https://wander1ng.com/post/confucius%E7%BB%84%E7%BB%87%E5%88%A9%E7%94%A8ads%E9%9A%90%E8%97%8F%E6%8A%80%E6%9C%AF%E7%9A%84%E6%94%BB%E5%87%BB%E6%B4%BB%E5%8A%A8/</link>
      <pubDate>Wed, 30 Oct 2024 17:58:02 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/confucius%E7%BB%84%E7%BB%87%E5%88%A9%E7%94%A8ads%E9%9A%90%E8%97%8F%E6%8A%80%E6%9C%AF%E7%9A%84%E6%94%BB%E5%87%BB%E6%B4%BB%E5%8A%A8/</guid>
      <description>&lt;p&gt;&lt;em&gt;来源360威胁情报中心的文章&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qi1krFG75sxQO6DSS3B3eQ&#34;&gt;https://mp.weixin.qq.com/s/qi1krFG75sxQO6DSS3B3eQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Confucius即“魔罗桫”，看名字没记错的话应该也是印度的组织，主要针对巴基斯坦地区进行攻击。&lt;/p&gt;
&lt;p&gt;ADS技术即Alternate Data Streams，也称作NTFS交换数据流，随着杀毒软件功能的日益强大，病毒总会借助各式各样的隐藏手段来逃避杀毒软件的“追捕”。有些病毒会通过设置文件属性来隐藏自身，从而长期伏在计算机中，使自己很难被用户发现。一种更为隐蔽、危害性更大的隐藏方法逐渐被病毒利用，即利用NTFS数据流来隐藏病毒，此类病毒我们称之为ADS流病毒或ZeroAcess。&lt;/p&gt;
&lt;p&gt;它是NTFS磁盘格式的一个特性。在NTFS文件系统下，每个文件都可以存在多个数据流，意思是除了主文件流之外还可以有许多非主文件流寄宿在主文件流中，这些利用NTFS数据流寄宿并隐藏在系统中的非主文件流我们称之为ADS流文件。虽然我们无法看到ADS流文件，但它们却是真实存在。&lt;/p&gt;
&lt;h4 id=&#34;攻击链&#34;&gt;攻击链&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/10/33d25060d87d6991e4e54df03061f08a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Confucius组织首先针对目标人群发送钓鱼邮件，并且携带恶意压缩包，其中压缩包中包括一个存在多个数据流的LNK文件，攻击者利用ADS交换数据流实现了恶意DLL和诱饵文档的隐藏，用户解压压缩包，看不到隐藏的DLL等文件，只能看到LNK文件，并且文件大小也只是LNK文件大小本身，但是当用户点击其中LNK文件即中招，LNK文件会释放隐藏的诱饵文档流数据，并释放DLL文件以及拷贝fixmapi.exe实现侧加载，并通过注册表实现持久化驻留。&lt;/p&gt;
&lt;p&gt;攻击入口为一个压缩包，文件名称为“Hajj_Advisory.rar”。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MD5&lt;/th&gt;
&lt;th&gt;fbcac2eb16586813275d2e25ec57142e&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;文件名称&lt;/td&gt;
&lt;td&gt;Hajj_Advisory.rar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件大小&lt;/td&gt;
&lt;td&gt;131.71 KB (134871 字节)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;解压后可以看到一个同名称的lnk文件，文件大小只有4KB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/10/9c2b9e819c45a3cece3b64a6d8e0f23e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是实际上攻击者利用ADS交换数据流技术在LNK文件中捆绑了两个数据流Banana和Apple，这两个数据流分别是恶意DLL和诱饵文档，不过这两个文件流不显示，即使系统设置显示隐藏文件，解压后也看不到该文件流。通过在CMD中执行dir /r命令，可以看到，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/10/f78d53895d3caacce74e2bfd8202be65.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;另外虽然LNK文件大小显示只有4KB，但是仔细观察发现该文件占用空间为188KB,也侧面看出该LNK携带了恶意文件流数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pub-f40a9f95639d4cee81dcb09d9b4adf70.r2.dev/blog/2024/10/31a841fedd7b29a5928c50ecb3d9a029.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;一种未曾见过的新技术，记录一下，长见识了~&lt;/p&gt;
&lt;p&gt;以及Confucius喜欢用fixmapi.exe进程侧加载。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Living Off the Land Binaries</title>
      <link>https://wander1ng.com/post/living-off-the-land-binaries/</link>
      <pubDate>Mon, 28 Oct 2024 18:07:46 +0800</pubDate>
      
      <guid>https://wander1ng.com/post/living-off-the-land-binaries/</guid>
      <description>&lt;h4 id=&#34;什么样的程序才能称之为lolbins&#34;&gt;什么样的程序才能称之为LOLBins？&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可以是带有Microsoft签名的二进制文件，也可以是Microsoft系统目录中的二进制文件。&lt;/li&gt;
&lt;li&gt;可以是第三方认证签名的程序。&lt;/li&gt;
&lt;li&gt;具有对APT或红队有用的功能。&lt;/li&gt;
&lt;li&gt;该程序除正常的功能之外，还可以做意料之外的行为（如恶意代码执行，UAC绕过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;lolbins常见的利用&#34;&gt;LOLBins常见的利用&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Cmd.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Powershell.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rundll32.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wmic.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WMIC扩展WMI（Windows Management Instrumentation，Windows管理工具），执行“wmic”命令启动WMIC命令行环境。这个命令可以在XP或 .NET Server的标准命令行解释器（cmd.exe）、Telnet会话或“运行”对话框中执行。这些启动方法可以在本地使用，也可以通过.NET Server终端服务会话使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mshta.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文全称Microsoft HTML Application，可翻译为微软超文本标记语言应用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cscript.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows Script Host引擎，用于加载wsf，.vbs，.js等脚本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Regsvr32.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于注册COM组件，是 Windows 系统提供的用来向系统注册控件或者卸载控件的命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cerutil.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可用于在Windows中管理证书。使用此程序可以在Windows中安装，备份，删除，管理和执行与证书和证书存储相关的各种功能。程序有一特性是能够从远程URL下载证书或任何其他文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Msiexec.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统进程，是Windows Installer的一部分。用于安装Windows Installer安装包（MSI）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installutil.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装程序工具是一个命令行实用工具，你可以通过此工具执行指定程序集中的安装程序组件，从而安装和卸载服务器资源。程序将会寻找卸载程序中的InstallUtil()函数，进行调用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MSBuild.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成项目或解决方案文件。程序运行将会寻找该项目文件中指定的TaskName名称中对应的程序的Execute()函数，进行调用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Write.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统写字板程序，程序加载需调用PROPSYS.dll中的PSCreateMemoryPropertyStore()函数,同时也加载config配置文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rekeywiz.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;加密文件系统证书管理向导程序，程序加载需调用mpr.dll。&lt;/p&gt;
&lt;h4 id=&#34;第三方认证签名文件利用&#34;&gt;第三方认证签名文件利用&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;WeChat.exe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信主程序，需调用WeChatWin.dll运行。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>